syntax = "proto3";

package order;

option go_package = "github.com/yourusername/ecomm/api/order";

import "google/protobuf/timestamp.proto";

// Order represents a customer order
message Order {
  string id = 1;
  string user_id = 2;
  repeated OrderItem items = 3;
  double total_amount = 4;
  OrderStatus status = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// OrderItem represents an item in an order
message OrderItem {
  string product_id = 1;
  string name = 2;
  int32 quantity = 3;
  double unit_price = 4;
  double subtotal = 5;
}

// OrderStatus represents the current status of an order
enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_PENDING = 1;
  ORDER_STATUS_PAID = 2;
  ORDER_STATUS_SHIPPED = 3;
  ORDER_STATUS_DELIVERED = 4;
  ORDER_STATUS_CANCELLED = 5;
}

// CreateOrderRequest represents a request to create a new order
message CreateOrderRequest {
  string user_id = 1;
  repeated OrderItem items = 2;
}

// CreateOrderResponse represents a response to creating a new order
message CreateOrderResponse {
  Order order = 1;
}

// GetOrderRequest represents a request to get an order by ID
message GetOrderRequest {
  string order_id = 1;
}

// GetOrderResponse represents a response to getting an order
message GetOrderResponse {
  Order order = 1;
}

// ListOrdersRequest represents a request to list orders
message ListOrdersRequest {
  string user_id = 1;
  int32 page_size = 2;
  string page_token = 3;
}

// ListOrdersResponse represents a response to listing orders
message ListOrdersResponse {
  repeated Order orders = 1;
  string next_page_token = 2;
}

// UpdateOrderStatusRequest represents a request to update an order's status
message UpdateOrderStatusRequest {
  string order_id = 1;
  OrderStatus status = 2;
}

// UpdateOrderStatusResponse represents a response to updating an order's status
message UpdateOrderStatusResponse {
  Order order = 1;
}

// OrderService provides methods for managing orders
service OrderService {
  // CreateOrder creates a new order
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  
  // GetOrder retrieves an order by ID
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  
  // ListOrders lists orders for a user
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
  
  // UpdateOrderStatus updates the status of an order
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
} 